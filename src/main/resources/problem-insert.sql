INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1', '两数之和', 'two-sum', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '2', '两数相加', 'add-two-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 2)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '3', '无重复字符的最长子串', 'longest-substring-without-repeating-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 3)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '4', '寻找两个有序数组的中位数', 'median-of-two-sorted-arrays', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 4)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '5', '最长回文子串', 'longest-palindromic-substring', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 5)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '6', 'Z 字形变换', 'zigzag-conversion', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 6)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '7', '整数反转', 'reverse-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 7)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '8', '字符串转换整数 (atoi)', 'string-to-integer-atoi', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 8)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '9', '回文数', 'palindrome-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 9)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '10', '正则表达式匹配', 'regular-expression-matching', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 10)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '11', '盛最多水的容器', 'container-with-most-water', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 11)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '12', '整数转罗马数字', 'integer-to-roman', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 12)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '13', '罗马数字转整数', 'roman-to-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 13)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '14', '最长公共前缀', 'longest-common-prefix', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 14)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '15', '三数之和', '3sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 15)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '16', '最接近的三数之和', '3sum-closest', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 16)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '17', '电话号码的字母组合', 'letter-combinations-of-a-phone-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 17)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '18', '四数之和', '4sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 18)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '19', '删除链表的倒数第N个节点', 'remove-nth-node-from-end-of-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 19)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '20', '有效的括号', 'valid-parentheses', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 20)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '21', '合并两个有序链表', 'merge-two-sorted-lists', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 21)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '22', '括号生成', 'generate-parentheses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 22)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '23', '合并K个排序链表', 'merge-k-sorted-lists', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 23)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '24', '两两交换链表中的节点', 'swap-nodes-in-pairs', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 24)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '25', 'K 个一组翻转链表', 'reverse-nodes-in-k-group', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 25)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '26', '删除排序数组中的重复项', 'remove-duplicates-from-sorted-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 26)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '27', '移除元素', 'remove-element', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 27)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '28', '实现 strStr()', 'implement-strstr', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 28)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '29', '两数相除', 'divide-two-integers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 29)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '30', '串联所有单词的子串', 'substring-with-concatenation-of-all-words', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 30)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '31', '下一个排列', 'next-permutation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 31)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '32', '最长有效括号', 'longest-valid-parentheses', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 32)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '33', '搜索旋转排序数组', 'search-in-rotated-sorted-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 33)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '34', '在排序数组中查找元素的第一个和最后一个位置', 'find-first-and-last-position-of-element-in-sorted-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 34)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '35', '搜索插入位置', 'search-insert-position', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 35)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '36', '有效的数独', 'valid-sudoku', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 36)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '37', '解数独', 'sudoku-solver', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 37)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '38', '报数', 'count-and-say', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 38)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '39', '组合总和', 'combination-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 39)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '40', '组合总和 II', 'combination-sum-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 40)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '41', '缺失的第一个正数', 'first-missing-positive', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 41)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '42', '接雨水', 'trapping-rain-water', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 42)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '43', '字符串相乘', 'multiply-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 43)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '44', '通配符匹配', 'wildcard-matching', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 44)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '45', '跳跃游戏 II', 'jump-game-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 45)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '46', '全排列', 'permutations', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 46)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '47', '全排列 II', 'permutations-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 47)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '48', '旋转图像', 'rotate-image', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 48)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '49', '字母异位词分组', 'group-anagrams', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 49)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '50', 'Pow(x, n)', 'powx-n', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 50)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '51', 'N皇后', 'n-queens', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 51)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '52', 'N皇后 II', 'n-queens-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 52)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '53', '最大子序和', 'maximum-subarray', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 53)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '54', '螺旋矩阵', 'spiral-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 54)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '55', '跳跃游戏', 'jump-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 55)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '56', '合并区间', 'merge-intervals', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 56)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '57', '插入区间', 'insert-interval', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 57)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '58', '最后一个单词的长度', 'length-of-last-word', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 58)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '59', '螺旋矩阵 II', 'spiral-matrix-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 59)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '60', '第k个排列', 'permutation-sequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 60)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '61', '旋转链表', 'rotate-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 61)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '62', '不同路径', 'unique-paths', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 62)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '63', '不同路径 II', 'unique-paths-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 63)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '64', '最小路径和', 'minimum-path-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 64)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '65', '有效数字', 'valid-number', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 65)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '66', '加一', 'plus-one', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 66)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '67', '二进制求和', 'add-binary', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 67)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '68', '文本左右对齐', 'text-justification', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 68)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '69', 'x 的平方根', 'sqrtx', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 69)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '70', '爬楼梯', 'climbing-stairs', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 70)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '71', '简化路径', 'simplify-path', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 71)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '72', '编辑距离', 'edit-distance', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 72)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '73', '矩阵置零', 'set-matrix-zeroes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 73)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '74', '搜索二维矩阵', 'search-a-2d-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 74)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '75', '颜色分类', 'sort-colors', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 75)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '76', '最小覆盖子串', 'minimum-window-substring', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 76)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '77', '组合', 'combinations', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 77)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '78', '子集', 'subsets', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 78)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '79', '单词搜索', 'word-search', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 79)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '80', '删除排序数组中的重复项 II', 'remove-duplicates-from-sorted-array-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 80)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '81', '搜索旋转排序数组 II', 'search-in-rotated-sorted-array-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 81)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '82', '删除排序链表中的重复元素 II', 'remove-duplicates-from-sorted-list-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 82)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '83', '删除排序链表中的重复元素', 'remove-duplicates-from-sorted-list', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 83)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '84', '柱状图中最大的矩形', 'largest-rectangle-in-histogram', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 84)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '85', '最大矩形', 'maximal-rectangle', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 85)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '86', '分隔链表', 'partition-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 86)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '87', '扰乱字符串', 'scramble-string', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 87)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '88', '合并两个有序数组', 'merge-sorted-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 88)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '89', '格雷编码', 'gray-code', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 89)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '90', '子集 II', 'subsets-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 90)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '91', '解码方法', 'decode-ways', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 91)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '92', '反转链表 II', 'reverse-linked-list-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 92)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '93', '复原IP地址', 'restore-ip-addresses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 93)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '94', '二叉树的中序遍历', 'binary-tree-inorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 94)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '95', '不同的二叉搜索树 II', 'unique-binary-search-trees-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 95)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '96', '不同的二叉搜索树', 'unique-binary-search-trees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 96)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '97', '交错字符串', 'interleaving-string', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 97)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '98', '验证二叉搜索树', 'validate-binary-search-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 98)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '99', '恢复二叉搜索树', 'recover-binary-search-tree', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 99)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '100', '相同的树', 'same-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 100)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '101', '对称二叉树', 'symmetric-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 101)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '102', '二叉树的层次遍历', 'binary-tree-level-order-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 102)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '103', '二叉树的锯齿形层次遍历', 'binary-tree-zigzag-level-order-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 103)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '104', '二叉树的最大深度', 'maximum-depth-of-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 104)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '105', '从前序与中序遍历序列构造二叉树', 'construct-binary-tree-from-preorder-and-inorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 105)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '106', '从中序与后序遍历序列构造二叉树', 'construct-binary-tree-from-inorder-and-postorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 106)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '107', '二叉树的层次遍历 II', 'binary-tree-level-order-traversal-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 107)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '108', '将有序数组转换为二叉搜索树', 'convert-sorted-array-to-binary-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 108)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '109', '有序链表转换二叉搜索树', 'convert-sorted-list-to-binary-search-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 109)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '110', '平衡二叉树', 'balanced-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 110)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '111', '二叉树的最小深度', 'minimum-depth-of-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 111)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '112', '路径总和', 'path-sum', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 112)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '113', '路径总和 II', 'path-sum-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 113)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '114', '二叉树展开为链表', 'flatten-binary-tree-to-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 114)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '115', '不同的子序列', 'distinct-subsequences', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 115)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '116', '填充每个节点的下一个右侧节点指针', 'populating-next-right-pointers-in-each-node', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 116)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '117', '填充每个节点的下一个右侧节点指针 II', 'populating-next-right-pointers-in-each-node-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 117)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '118', '杨辉三角', 'pascals-triangle', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 118)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '119', '杨辉三角 II', 'pascals-triangle-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 119)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '120', '三角形最小路径和', 'triangle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 120)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '121', '买卖股票的最佳时机', 'best-time-to-buy-and-sell-stock', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 121)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '122', '买卖股票的最佳时机 II', 'best-time-to-buy-and-sell-stock-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 122)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '123', '买卖股票的最佳时机 III', 'best-time-to-buy-and-sell-stock-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 123)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '124', '二叉树中的最大路径和', 'binary-tree-maximum-path-sum', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 124)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '125', '验证回文串', 'valid-palindrome', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 125)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '126', '单词接龙 II', 'word-ladder-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 126)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '127', '单词接龙', 'word-ladder', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 127)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '128', '最长连续序列', 'longest-consecutive-sequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 128)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '129', '求根到叶子节点数字之和', 'sum-root-to-leaf-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 129)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '130', '被围绕的区域', 'surrounded-regions', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 130)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '131', '分割回文串', 'palindrome-partitioning', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 131)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '132', '分割回文串 II', 'palindrome-partitioning-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 132)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '133', '克隆图', 'clone-graph', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 133)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '134', '加油站', 'gas-station', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 134)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '135', '分发糖果', 'candy', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 135)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '136', '只出现一次的数字', 'single-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 136)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '137', '只出现一次的数字 II', 'single-number-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 137)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '138', '复制带随机指针的链表', 'copy-list-with-random-pointer', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 138)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '139', '单词拆分', 'word-break', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 139)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '140', '单词拆分 II', 'word-break-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 140)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '141', '环形链表', 'linked-list-cycle', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 141)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '142', '环形链表 II', 'linked-list-cycle-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 142)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '143', '重排链表', 'reorder-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 143)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '144', '二叉树的前序遍历', 'binary-tree-preorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 144)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '145', '二叉树的后序遍历', 'binary-tree-postorder-traversal', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 145)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '146', 'LRU缓存机制', 'lru-cache', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 146)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '147', '对链表进行插入排序', 'insertion-sort-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 147)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '148', '排序链表', 'sort-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 148)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '149', '直线上最多的点数', 'max-points-on-a-line', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 149)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '150', '逆波兰表达式求值', 'evaluate-reverse-polish-notation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 150)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '151', '翻转字符串里的单词', 'reverse-words-in-a-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 151)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '152', '乘积最大子序列', 'maximum-product-subarray', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 152)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '153', '寻找旋转排序数组中的最小值', 'find-minimum-in-rotated-sorted-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 153)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '154', '寻找旋转排序数组中的最小值 II', 'find-minimum-in-rotated-sorted-array-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 154)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '155', '最小栈', 'min-stack', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 155)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '156', '上下翻转二叉树', 'binary-tree-upside-down', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 156)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '157', '用 Read4 读取 N 个字符', 'read-n-characters-given-read4', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 157)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '158', '用 Read4 读取 N 个字符 II', 'read-n-characters-given-read4-ii-call-multiple-times', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 158)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '159', '至多包含两个不同字符的最长子串', 'longest-substring-with-at-most-two-distinct-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 159)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '160', '相交链表', 'intersection-of-two-linked-lists', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 160)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '161', '相隔为 1 的编辑距离', 'one-edit-distance', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 161)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '162', '寻找峰值', 'find-peak-element', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 162)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '163', '缺失的区间', 'missing-ranges', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 163)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '164', '最大间距', 'maximum-gap', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 164)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '165', '比较版本号', 'compare-version-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 165)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '166', '分数到小数', 'fraction-to-recurring-decimal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 166)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '167', '两数之和 II - 输入有序数组', 'two-sum-ii-input-array-is-sorted', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 167)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '168', 'Excel表列名称', 'excel-sheet-column-title', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 168)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '169', '多数元素', 'majority-element', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 169)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '170', '两数之和 III - 数据结构设计', 'two-sum-iii-data-structure-design', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 170)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '171', 'Excel表列序号', 'excel-sheet-column-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 171)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '172', '阶乘后的零', 'factorial-trailing-zeroes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 172)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '173', '二叉搜索树迭代器', 'binary-search-tree-iterator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 173)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '174', '地下城游戏', 'dungeon-game', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 174)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '179', '最大数', 'largest-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 179)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '186', '翻转字符串里的单词 II', 'reverse-words-in-a-string-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 186)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '187', '重复的DNA序列', 'repeated-dna-sequences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 187)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '188', '买卖股票的最佳时机 IV', 'best-time-to-buy-and-sell-stock-iv', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 188)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '189', '旋转数组', 'rotate-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 189)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '190', '颠倒二进制位', 'reverse-bits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 190)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '191', '位1的个数', 'number-of-1-bits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 191)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '198', '打家劫舍', 'house-robber', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 198)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '199', '二叉树的右视图', 'binary-tree-right-side-view', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 199)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '200', '岛屿数量', 'number-of-islands', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 200)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '201', '数字范围按位与', 'bitwise-and-of-numbers-range', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 201)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '202', '快乐数', 'happy-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 202)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '203', '移除链表元素', 'remove-linked-list-elements', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 203)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '204', '计数质数', 'count-primes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 204)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '205', '同构字符串', 'isomorphic-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 205)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '206', '反转链表', 'reverse-linked-list', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 206)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '207', '课程表', 'course-schedule', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 207)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '208', '实现 Trie (前缀树)', 'implement-trie-prefix-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 208)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '209', '长度最小的子数组', 'minimum-size-subarray-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 209)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '210', '课程表 II', 'course-schedule-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 210)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '211', '添加与搜索单词 - 数据结构设计', 'add-and-search-word-data-structure-design', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 211)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '212', '单词搜索 II', 'word-search-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 212)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '213', '打家劫舍 II', 'house-robber-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 213)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '214', '最短回文串', 'shortest-palindrome', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 214)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '215', '数组中的第K个最大元素', 'kth-largest-element-in-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 215)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '216', '组合总和 III', 'combination-sum-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 216)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '217', '存在重复元素', 'contains-duplicate', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 217)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '218', '天际线问题', 'the-skyline-problem', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 218)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '219', '存在重复元素 II', 'contains-duplicate-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 219)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '220', '存在重复元素 III', 'contains-duplicate-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 220)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '221', '最大正方形', 'maximal-square', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 221)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '222', '完全二叉树的节点个数', 'count-complete-tree-nodes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 222)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '223', '矩形面积', 'rectangle-area', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 223)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '224', '基本计算器', 'basic-calculator', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 224)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '225', '用队列实现栈', 'implement-stack-using-queues', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 225)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '226', '翻转二叉树', 'invert-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 226)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '227', '基本计算器 II', 'basic-calculator-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 227)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '228', '汇总区间', 'summary-ranges', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 228)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '229', '求众数 II', 'majority-element-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 229)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '230', '二叉搜索树中第K小的元素', 'kth-smallest-element-in-a-bst', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 230)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '231', '2的幂', 'power-of-two', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 231)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '232', '用栈实现队列', 'implement-queue-using-stacks', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 232)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '233', '数字 1 的个数', 'number-of-digit-one', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 233)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '234', '回文链表', 'palindrome-linked-list', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 234)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '235', '二叉搜索树的最近公共祖先', 'lowest-common-ancestor-of-a-binary-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 235)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '236', '二叉树的最近公共祖先', 'lowest-common-ancestor-of-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 236)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '237', '删除链表中的节点', 'delete-node-in-a-linked-list', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 237)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '238', '除自身以外数组的乘积', 'product-of-array-except-self', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 238)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '239', '滑动窗口最大值', 'sliding-window-maximum', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 239)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '240', '搜索二维矩阵 II', 'search-a-2d-matrix-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 240)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '241', '为运算表达式设计优先级', 'different-ways-to-add-parentheses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 241)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '242', '有效的字母异位词', 'valid-anagram', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 242)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '243', '最短单词距离', 'shortest-word-distance', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 243)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '244', '最短单词距离 II', 'shortest-word-distance-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 244)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '245', '最短单词距离 III', 'shortest-word-distance-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 245)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '246', '中心对称数', 'strobogrammatic-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 246)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '247', '中心对称数 II', 'strobogrammatic-number-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 247)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '248', '中心对称数 III', 'strobogrammatic-number-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 248)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '249', '移位字符串分组', 'group-shifted-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 249)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '250', '统计同值子树', 'count-univalue-subtrees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 250)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '251', '展开二维向量', 'flatten-2d-vector', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 251)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '252', '会议室', 'meeting-rooms', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 252)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '253', '会议室 II', 'meeting-rooms-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 253)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '254', '因子的组合', 'factor-combinations', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 254)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '255', '验证前序遍历序列二叉搜索树', 'verify-preorder-sequence-in-binary-search-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 255)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '256', '粉刷房子', 'paint-house', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 256)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '257', '二叉树的所有路径', 'binary-tree-paths', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 257)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '258', '各位相加', 'add-digits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 258)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '259', '较小的三数之和', '3sum-smaller', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 259)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '260', '只出现一次的数字 III', 'single-number-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 260)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '261', '以图判树', 'graph-valid-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 261)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '263', '丑数', 'ugly-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 263)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '264', '丑数 II', 'ugly-number-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 264)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '265', '粉刷房子 II', 'paint-house-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 265)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '266', '回文排列', 'palindrome-permutation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 266)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '267', '回文排列 II', 'palindrome-permutation-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 267)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '268', '缺失数字', 'missing-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 268)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '269', '火星词典', 'alien-dictionary', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 269)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '270', '最接近的二叉搜索树值', 'closest-binary-search-tree-value', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 270)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '271', '字符串的编码与解码', 'encode-and-decode-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 271)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '272', '最接近的二叉搜索树值 II', 'closest-binary-search-tree-value-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 272)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '273', '整数转换英文表示', 'integer-to-english-words', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 273)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '274', 'H指数', 'h-index', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 274)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '275', 'H指数 II', 'h-index-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 275)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '276', '栅栏涂色', 'paint-fence', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 276)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '277', '搜寻名人', 'find-the-celebrity', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 277)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '278', '第一个错误的版本', 'first-bad-version', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 278)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '279', '完全平方数', 'perfect-squares', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 279)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '280', '摆动排序', 'wiggle-sort', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 280)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '281', '锯齿迭代器', 'zigzag-iterator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 281)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '282', '给表达式添加运算符', 'expression-add-operators', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 282)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '283', '移动零', 'move-zeroes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 283)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '284', '顶端迭代器', 'peeking-iterator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 284)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '285', '二叉搜索树中的顺序后继', 'inorder-successor-in-bst', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 285)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '286', '墙与门', 'walls-and-gates', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 286)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '287', '寻找重复数', 'find-the-duplicate-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 287)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '288', '单词的唯一缩写', 'unique-word-abbreviation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 288)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '289', '生命游戏', 'game-of-life', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 289)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '290', '单词规律', 'word-pattern', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 290)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '291', '单词规律 II', 'word-pattern-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 291)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '292', 'Nim 游戏', 'nim-game', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 292)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '293', '翻转游戏', 'flip-game', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 293)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '294', '翻转游戏 II', 'flip-game-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 294)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '295', '数据流的中位数', 'find-median-from-data-stream', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 295)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '296', '最佳的碰头地点', 'best-meeting-point', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 296)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '297', '二叉树的序列化与反序列化', 'serialize-and-deserialize-binary-tree', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 297)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '298', '二叉树最长连续序列', 'binary-tree-longest-consecutive-sequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 298)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '299', '猜数字游戏', 'bulls-and-cows', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 299)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '300', '最长上升子序列', 'longest-increasing-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 300)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '301', '删除无效的括号', 'remove-invalid-parentheses', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 301)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '302', '包含全部黑色像素的最小矩形', 'smallest-rectangle-enclosing-black-pixels', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 302)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '303', '区域和检索 - 数组不可变', 'range-sum-query-immutable', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 303)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '304', '二维区域和检索 - 矩阵不可变', 'range-sum-query-2d-immutable', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 304)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '305', '岛屿数量 II', 'number-of-islands-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 305)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '306', '累加数', 'additive-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 306)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '307', '区域和检索 - 数组可修改', 'range-sum-query-mutable', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 307)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '308', '二维区域和检索 - 可变', 'range-sum-query-2d-mutable', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 308)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '309', '最佳买卖股票时机含冷冻期', 'best-time-to-buy-and-sell-stock-with-cooldown', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 309)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '310', '最小高度树', 'minimum-height-trees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 310)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '311', '稀疏矩阵的乘法', 'sparse-matrix-multiplication', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 311)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '312', '戳气球', 'burst-balloons', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 312)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '313', '超级丑数', 'super-ugly-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 313)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '314', '二叉树的垂直遍历', 'binary-tree-vertical-order-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 314)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '315', '计算右侧小于当前元素的个数', 'count-of-smaller-numbers-after-self', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 315)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '316', '去除重复字母', 'remove-duplicate-letters', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 316)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '317', '离建筑物最近的距离', 'shortest-distance-from-all-buildings', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 317)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '318', '最大单词长度乘积', 'maximum-product-of-word-lengths', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 318)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '319', '灯泡开关', 'bulb-switcher', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 319)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '320', '列举单词的全部缩写', 'generalized-abbreviation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 320)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '321', '拼接最大数', 'create-maximum-number', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 321)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '322', '零钱兑换', 'coin-change', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 322)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '323', '无向图中连通分量的数目', 'number-of-connected-components-in-an-undirected-graph', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 323)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '324', '摆动排序 II', 'wiggle-sort-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 324)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '325', '和等于 k 的最长子数组长度', 'maximum-size-subarray-sum-equals-k', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 325)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '326', '3的幂', 'power-of-three', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 326)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '327', '区间和的个数', 'count-of-range-sum', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 327)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '328', '奇偶链表', 'odd-even-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 328)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '329', '矩阵中的最长递增路径', 'longest-increasing-path-in-a-matrix', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 329)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '330', '按要求补齐数组', 'patching-array', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 330)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '331', '验证二叉树的前序序列化', 'verify-preorder-serialization-of-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 331)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '332', '重新安排行程', 'reconstruct-itinerary', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 332)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '333', '最大 BST 子树', 'largest-bst-subtree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 333)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '334', '递增的三元子序列', 'increasing-triplet-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 334)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '335', '路径交叉', 'self-crossing', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 335)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '336', '回文对', 'palindrome-pairs', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 336)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '337', '打家劫舍 III', 'house-robber-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 337)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '338', '比特位计数', 'counting-bits', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 338)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '339', '嵌套列表权重和', 'nested-list-weight-sum', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 339)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '340', '至多包含 K 个不同字符的最长子串', 'longest-substring-with-at-most-k-distinct-characters', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 340)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '341', '扁平化嵌套列表迭代器', 'flatten-nested-list-iterator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 341)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '342', '4的幂', 'power-of-four', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 342)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '343', '整数拆分', 'integer-break', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 343)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '344', '反转字符串', 'reverse-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 344)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '345', '反转字符串中的元音字母', 'reverse-vowels-of-a-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 345)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '346', '数据流中的移动平均值', 'moving-average-from-data-stream', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 346)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '347', '前 K 个高频元素', 'top-k-frequent-elements', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 347)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '348', '判定井字棋胜负', 'design-tic-tac-toe', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 348)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '349', '两个数组的交集', 'intersection-of-two-arrays', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 349)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '350', '两个数组的交集 II', 'intersection-of-two-arrays-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 350)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '351', '安卓系统手势解锁', 'android-unlock-patterns', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 351)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '352', '将数据流变为多个不相交区间', 'data-stream-as-disjoint-intervals', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 352)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '353', '贪吃蛇', 'design-snake-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 353)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '354', '俄罗斯套娃信封问题', 'russian-doll-envelopes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 354)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '355', '设计推特', 'design-twitter', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 355)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '356', '直线镜像', 'line-reflection', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 356)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '357', '计算各个位数不同的数字个数', 'count-numbers-with-unique-digits', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 357)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '358', 'K 距离间隔重排字符串', 'rearrange-string-k-distance-apart', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 358)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '359', '日志速率限制器', 'logger-rate-limiter', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 359)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '360', '有序转化数组', 'sort-transformed-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 360)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '361', '轰炸敌人', 'bomb-enemy', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 361)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '362', '敲击计数器', 'design-hit-counter', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 362)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '363', '矩形区域不超过 K 的最大数值和', 'max-sum-of-rectangle-no-larger-than-k', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 363)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '364', '加权嵌套序列和 II', 'nested-list-weight-sum-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 364)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '365', '水壶问题', 'water-and-jug-problem', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 365)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '366', '寻找完全二叉树的叶子节点', 'find-leaves-of-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 366)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '367', '有效的完全平方数', 'valid-perfect-square', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 367)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '368', '最大整除子集', 'largest-divisible-subset', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 368)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '369', '给单链表加一', 'plus-one-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 369)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '370', '区间加法', 'range-addition', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 370)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '371', '两整数之和', 'sum-of-two-integers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 371)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '372', '超级次方', 'super-pow', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 372)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '373', '查找和最小的K对数字', 'find-k-pairs-with-smallest-sums', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 373)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '374', '猜数字大小', 'guess-number-higher-or-lower', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 374)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '375', '猜数字大小 II', 'guess-number-higher-or-lower-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 375)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '376', '摆动序列', 'wiggle-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 376)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '377', '组合总和 Ⅳ', 'combination-sum-iv', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 377)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '378', '有序矩阵中第K小的元素', 'kth-smallest-element-in-a-sorted-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 378)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '379', '电话目录管理系统', 'design-phone-directory', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 379)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '380', '常数时间插入、删除和获取随机元素', 'insert-delete-getrandom-o1', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 380)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '381', 'O(1) 时间插入、删除和获取随机元素 - 允许重复', 'insert-delete-getrandom-o1-duplicates-allowed', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 381)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '382', '链表随机节点', 'linked-list-random-node', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 382)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '383', '赎金信', 'ransom-note', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 383)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '384', '打乱数组', 'shuffle-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 384)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '385', '迷你语法分析器', 'mini-parser', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 385)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '386', '字典序排数', 'lexicographical-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 386)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '387', '字符串中的第一个唯一字符', 'first-unique-character-in-a-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 387)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '388', '文件的最长绝对路径', 'longest-absolute-file-path', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 388)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '389', '找不同', 'find-the-difference', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 389)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '390', '消除游戏', 'elimination-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 390)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '391', '完美矩形', 'perfect-rectangle', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 391)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '392', '判断子序列', 'is-subsequence', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 392)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '393', 'UTF-8 编码验证', 'utf-8-validation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 393)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '394', '字符串解码', 'decode-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 394)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '395', '至少有K个重复字符的最长子串', 'longest-substring-with-at-least-k-repeating-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 395)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '396', '旋转函数', 'rotate-function', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 396)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '397', '整数替换', 'integer-replacement', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 397)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '398', '随机数索引', 'random-pick-index', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 398)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '399', '除法求值', 'evaluate-division', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 399)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '400', '第N个数字', 'nth-digit', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 400)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '401', '二进制手表', 'binary-watch', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 401)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '402', '移掉K位数字', 'remove-k-digits', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 402)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '403', '青蛙过河', 'frog-jump', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 403)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '404', '左叶子之和', 'sum-of-left-leaves', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 404)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '405', '数字转换为十六进制数', 'convert-a-number-to-hexadecimal', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 405)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '406', '根据身高重建队列', 'queue-reconstruction-by-height', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 406)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '407', '接雨水 II', 'trapping-rain-water-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 407)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '408', '有效单词缩写', 'valid-word-abbreviation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 408)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '409', '最长回文串', 'longest-palindrome', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 409)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '410', '分割数组的最大值', 'split-array-largest-sum', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 410)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '411', '最短特异单词缩写', 'minimum-unique-word-abbreviation', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 411)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '412', 'Fizz Buzz', 'fizz-buzz', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 412)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '413', '等差数列划分', 'arithmetic-slices', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 413)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '414', '第三大的数', 'third-maximum-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 414)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '415', '字符串相加', 'add-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 415)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '416', '分割等和子集', 'partition-equal-subset-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 416)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '417', '太平洋大西洋水流问题', 'pacific-atlantic-water-flow', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 417)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '418', '屏幕可显示句子的数量', 'sentence-screen-fitting', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 418)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '419', '甲板上的战舰', 'battleships-in-a-board', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 419)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '420', '强密码检验器', 'strong-password-checker', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 420)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '421', '数组中两个数的最大异或值', 'maximum-xor-of-two-numbers-in-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 421)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '422', '有效的单词方块', 'valid-word-square', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 422)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '423', '从英文中重建数字', 'reconstruct-original-digits-from-english', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 423)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '424', '替换后的最长重复字符', 'longest-repeating-character-replacement', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 424)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '425', '单词方块', 'word-squares', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 425)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '426', '将二叉搜索树转化为排序的双向链表', 'convert-binary-search-tree-to-sorted-doubly-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 426)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '427', '建立四叉树', 'construct-quad-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 427)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '428', '序列化和反序列化 N 叉树', 'serialize-and-deserialize-n-ary-tree', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 428)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '429', 'N叉树的层序遍历', 'n-ary-tree-level-order-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 429)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '430', '扁平化多级双向链表', 'flatten-a-multilevel-doubly-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 430)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '431', '将 N 叉树编码为二叉树', 'encode-n-ary-tree-to-binary-tree', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 431)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '432', '全 O(1) 的数据结构', 'all-oone-data-structure', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 432)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '433', '最小基因变化', 'minimum-genetic-mutation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 433)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '434', '字符串中的单词数', 'number-of-segments-in-a-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 434)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '435', '无重叠区间', 'non-overlapping-intervals', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 435)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '436', '寻找右区间', 'find-right-interval', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 436)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '437', '路径总和 III', 'path-sum-iii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 437)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '438', '找到字符串中所有字母异位词', 'find-all-anagrams-in-a-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 438)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '439', '三元表达式解析器', 'ternary-expression-parser', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 439)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '440', '字典序的第K小数字', 'k-th-smallest-in-lexicographical-order', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 440)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '441', '排列硬币', 'arranging-coins', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 441)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '442', '数组中重复的数据', 'find-all-duplicates-in-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 442)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '443', '压缩字符串', 'string-compression', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 443)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '444', '序列重建', 'sequence-reconstruction', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 444)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '445', '两数相加 II', 'add-two-numbers-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 445)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '446', '等差数列划分 II - 子序列', 'arithmetic-slices-ii-subsequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 446)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '447', '回旋镖的数量', 'number-of-boomerangs', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 447)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '448', '找到所有数组中消失的数字', 'find-all-numbers-disappeared-in-an-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 448)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '449', '序列化和反序列化二叉搜索树', 'serialize-and-deserialize-bst', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 449)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '450', '删除二叉搜索树中的节点', 'delete-node-in-a-bst', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 450)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '451', '根据字符出现频率排序', 'sort-characters-by-frequency', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 451)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '452', '用最少数量的箭引爆气球', 'minimum-number-of-arrows-to-burst-balloons', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 452)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '453', '最小移动次数使数组元素相等', 'minimum-moves-to-equal-array-elements', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 453)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '454', '四数相加 II', '4sum-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 454)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '455', '分发饼干', 'assign-cookies', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 455)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '456', '132模式', '132-pattern', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 456)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '457', '环形数组循环', 'circular-array-loop', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 457)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '458', '可怜的小猪', 'poor-pigs', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 458)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '459', '重复的子字符串', 'repeated-substring-pattern', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 459)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '460', 'LFU缓存', 'lfu-cache', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 460)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '461', '汉明距离', 'hamming-distance', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 461)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '462', '最少移动次数使数组元素相等 II', 'minimum-moves-to-equal-array-elements-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 462)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '463', '岛屿的周长', 'island-perimeter', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 463)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '464', '我能赢吗', 'can-i-win', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 464)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '465', '最优账单平衡', 'optimal-account-balancing', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 465)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '466', '统计重复个数', 'count-the-repetitions', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 466)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '467', '环绕字符串中唯一的子字符串', 'unique-substrings-in-wraparound-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 467)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '468', '验证IP地址', 'validate-ip-address', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 468)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '469', '凸多边形', 'convex-polygon', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 469)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '470', '用 Rand7() 实现 Rand10()', 'implement-rand10-using-rand7', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 470)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '471', '编码最短长度的字符串', 'encode-string-with-shortest-length', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 471)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '472', '连接词', 'concatenated-words', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 472)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '473', '火柴拼正方形', 'matchsticks-to-square', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 473)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '474', '一和零', 'ones-and-zeroes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 474)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '475', '供暖器', 'heaters', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 475)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '476', '数字的补数', 'number-complement', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 476)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '477', '汉明距离总和', 'total-hamming-distance', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 477)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '478', '在圆内随机生成点', 'generate-random-point-in-a-circle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 478)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '479', '最大回文数乘积', 'largest-palindrome-product', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 479)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '480', '滑动窗口中位数', 'sliding-window-median', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 480)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '481', '神奇字符串', 'magical-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 481)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '482', '密钥格式化', 'license-key-formatting', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 482)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '483', '最小好进制', 'smallest-good-base', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 483)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '484', '寻找排列', 'find-permutation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 484)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '485', '最大连续1的个数', 'max-consecutive-ones', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 485)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '486', '预测赢家', 'predict-the-winner', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 486)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '487', '最大连续1的个数 II', 'max-consecutive-ones-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 487)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '488', '祖玛游戏', 'zuma-game', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 488)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '489', '扫地机器人', 'robot-room-cleaner', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 489)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '490', '迷宫', 'the-maze', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 490)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '491', '递增子序列', 'increasing-subsequences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 491)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '492', '构造矩形', 'construct-the-rectangle', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 492)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '493', '翻转对', 'reverse-pairs', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 493)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '494', '目标和', 'target-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 494)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '495', '提莫攻击', 'teemo-attacking', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 495)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '496', '下一个更大元素 I', 'next-greater-element-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 496)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '497', '非重叠矩形中的随机点', 'random-point-in-non-overlapping-rectangles', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 497)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '498', '对角线遍历', 'diagonal-traverse', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 498)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '499', '迷宫 III', 'the-maze-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 499)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '500', '键盘行', 'keyboard-row', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 500)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '501', '二叉搜索树中的众数', 'find-mode-in-binary-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 501)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '502', 'IPO', 'ipo', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 502)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '503', '下一个更大元素 II', 'next-greater-element-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 503)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '504', '七进制数', 'base-7', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 504)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '505', '迷宫 II', 'the-maze-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 505)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '506', '相对名次', 'relative-ranks', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 506)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '507', '完美数', 'perfect-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 507)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '508', '出现次数最多的子树元素和', 'most-frequent-subtree-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 508)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '509', '斐波那契数', 'fibonacci-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 509)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '510', '二叉搜索树中的中序后继 II', 'inorder-successor-in-bst-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 510)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '513', '找树左下角的值', 'find-bottom-left-tree-value', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 513)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '514', '自由之路', 'freedom-trail', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 514)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '515', '在每个树行中找最大值', 'find-largest-value-in-each-tree-row', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 515)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '516', '最长回文子序列', 'longest-palindromic-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 516)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '517', '超级洗衣机', 'super-washing-machines', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 517)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '518', '零钱兑换 II', 'coin-change-2', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 518)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '519', '随机翻转矩阵', 'random-flip-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 519)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '520', '检测大写字母', 'detect-capital', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 520)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '521', '最长特殊序列 Ⅰ', 'longest-uncommon-subsequence-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 521)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '522', '最长特殊序列 II', 'longest-uncommon-subsequence-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 522)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '523', '连续的子数组和', 'continuous-subarray-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 523)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '524', '通过删除字母匹配到字典里最长单词', 'longest-word-in-dictionary-through-deleting', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 524)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '525', '连续数组', 'contiguous-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 525)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '526', '优美的排列', 'beautiful-arrangement', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 526)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '527', '单词缩写', 'word-abbreviation', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 527)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '528', '按权重随机选择', 'random-pick-with-weight', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 528)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '529', '扫雷游戏', 'minesweeper', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 529)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '530', '二叉搜索树的最小绝对差', 'minimum-absolute-difference-in-bst', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 530)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '531', '孤独像素 I', 'lonely-pixel-i', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 531)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '532', '数组中的K-diff数对', 'k-diff-pairs-in-an-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 532)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '533', '孤独像素 II', 'lonely-pixel-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 533)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '535', 'TinyURL 的加密与解密', 'encode-and-decode-tinyurl', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 535)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '536', '从字符串生成二叉树', 'construct-binary-tree-from-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 536)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '537', '复数乘法', 'complex-number-multiplication', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 537)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '538', '把二叉搜索树转换为累加树', 'convert-bst-to-greater-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 538)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '539', '最小时间差', 'minimum-time-difference', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 539)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '540', '有序数组中的单一元素', 'single-element-in-a-sorted-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 540)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '541', '反转字符串 II', 'reverse-string-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 541)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '542', '01 矩阵', '01-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 542)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '543', '二叉树的直径', 'diameter-of-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 543)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '544', '输出比赛匹配对', 'output-contest-matches', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 544)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '545', '二叉树的边界', 'boundary-of-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 545)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '546', '移除盒子', 'remove-boxes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 546)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '547', '朋友圈', 'friend-circles', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 547)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '548', '将数组分割成和相等的子数组', 'split-array-with-equal-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 548)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '549', '二叉树中最长的连续序列', 'binary-tree-longest-consecutive-sequence-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 549)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '551', '学生出勤记录 I', 'student-attendance-record-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 551)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '552', '学生出勤记录 II', 'student-attendance-record-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 552)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '553', '最优除法', 'optimal-division', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 553)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '554', '砖墙', 'brick-wall', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 554)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '555', '分割连接字符串', 'split-concatenated-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 555)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '556', '下一个更大元素 III', 'next-greater-element-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 556)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '557', '反转字符串中的单词 III', 'reverse-words-in-a-string-iii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 557)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '558', '四叉树交集', 'quad-tree-intersection', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 558)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '559', 'N叉树的最大深度', 'maximum-depth-of-n-ary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 559)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '560', '和为K的子数组', 'subarray-sum-equals-k', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 560)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '561', '数组拆分 I', 'array-partition-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 561)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '562', '矩阵中最长的连续1线段', 'longest-line-of-consecutive-one-in-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 562)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '563', '二叉树的坡度', 'binary-tree-tilt', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 563)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '564', '寻找最近的回文数', 'find-the-closest-palindrome', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 564)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '565', '数组嵌套', 'array-nesting', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 565)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '566', '重塑矩阵', 'reshape-the-matrix', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 566)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '567', '字符串的排列', 'permutation-in-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 567)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '568', '最大休假天数', 'maximum-vacation-days', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 568)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '572', '另一个树的子树', 'subtree-of-another-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 572)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '573', '松鼠模拟', 'squirrel-simulation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 573)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '575', '分糖果', 'distribute-candies', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 575)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '576', '出界的路径数', 'out-of-boundary-paths', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 576)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '581', '最短无序连续子数组', 'shortest-unsorted-continuous-subarray', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 581)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '582', '杀死进程', 'kill-process', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 582)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '583', '两个字符串的删除操作', 'delete-operation-for-two-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 583)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '587', '安装栅栏', 'erect-the-fence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 587)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '588', '设计内存文件系统', 'design-in-memory-file-system', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 588)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '589', 'N叉树的前序遍历', 'n-ary-tree-preorder-traversal', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 589)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '590', 'N叉树的后序遍历', 'n-ary-tree-postorder-traversal', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 590)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '591', '标签验证器', 'tag-validator', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 591)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '592', '分数加减运算', 'fraction-addition-and-subtraction', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 592)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '593', '有效的正方形', 'valid-square', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 593)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '594', '最长和谐子序列', 'longest-harmonious-subsequence', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 594)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '598', '范围求和 II', 'range-addition-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 598)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '599', '两个列表的最小索引总和', 'minimum-index-sum-of-two-lists', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 599)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '600', '不含连续1的非负整数', 'non-negative-integers-without-consecutive-ones', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 600)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '604', '迭代压缩字符串', 'design-compressed-string-iterator', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 604)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '605', '种花问题', 'can-place-flowers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 605)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '606', '根据二叉树创建字符串', 'construct-string-from-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 606)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '609', '在系统中查找重复文件', 'find-duplicate-file-in-system', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 609)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '611', '有效三角形的个数', 'valid-triangle-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 611)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '616', '给字符串添加加粗标签', 'add-bold-tag-in-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 616)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '617', '合并二叉树', 'merge-two-binary-trees', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 617)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '621', '任务调度器', 'task-scheduler', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 621)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '622', '设计循环队列', 'design-circular-queue', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 622)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '623', '在二叉树中增加一行', 'add-one-row-to-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 623)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '624', '数组列表中的最大距离', 'maximum-distance-in-arrays', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 624)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '625', '最小因式分解', 'minimum-factorization', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 625)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '628', '三个数的最大乘积', 'maximum-product-of-three-numbers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 628)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '629', 'K个逆序对数组', 'k-inverse-pairs-array', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 629)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '630', '课程表 III', 'course-schedule-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 630)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '631', '设计 Excel 求和公式', 'design-excel-sum-formula', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 631)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '632', '最小区间', 'smallest-range-covering-elements-from-k-lists', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 632)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '633', '平方数之和', 'sum-of-square-numbers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 633)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '634', '寻找数组的错位排列', 'find-the-derangement-of-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 634)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '635', '设计日志存储系统', 'design-log-storage-system', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 635)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '636', '函数的独占时间', 'exclusive-time-of-functions', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 636)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '637', '二叉树的层平均值', 'average-of-levels-in-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 637)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '638', '大礼包', 'shopping-offers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 638)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '639', '解码方法 2', 'decode-ways-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 639)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '640', '求解方程', 'solve-the-equation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 640)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '641', '设计循环双端队列', 'design-circular-deque', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 641)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '642', '设计搜索自动补全系统', 'design-search-autocomplete-system', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 642)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '643', '子数组最大平均数 I', 'maximum-average-subarray-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 643)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '644', '最大平均子段和 II', 'maximum-average-subarray-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 644)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '645', '错误的集合', 'set-mismatch', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 645)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '646', '最长数对链', 'maximum-length-of-pair-chain', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 646)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '647', '回文子串', 'palindromic-substrings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 647)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '648', '单词替换', 'replace-words', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 648)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '649', 'Dota2 参议院', 'dota2-senate', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 649)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '650', '只有两个键的键盘', '2-keys-keyboard', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 650)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '651', '4键键盘', '4-keys-keyboard', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 651)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '652', '寻找重复的子树', 'find-duplicate-subtrees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 652)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '653', '两数之和 IV - 输入 BST', 'two-sum-iv-input-is-a-bst', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 653)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '654', '最大二叉树', 'maximum-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 654)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '655', '输出二叉树', 'print-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 655)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '656', '金币路径', 'coin-path', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 656)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '657', '机器人能否返回原点', 'robot-return-to-origin', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 657)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '658', '找到 K 个最接近的元素', 'find-k-closest-elements', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 658)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '659', '分割数组为连续子序列', 'split-array-into-consecutive-subsequences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 659)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '660', '移除 9', 'remove-9', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 660)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '661', '图片平滑器', 'image-smoother', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 661)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '662', '二叉树最大宽度', 'maximum-width-of-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 662)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '663', '均匀树划分', 'equal-tree-partition', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 663)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '664', '奇怪的打印机', 'strange-printer', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 664)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '665', '非递减数列', 'non-decreasing-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 665)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '666', '路径和 IV', 'path-sum-iv', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 666)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '667', '优美的排列 II', 'beautiful-arrangement-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 667)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '668', '乘法表中第k小的数', 'kth-smallest-number-in-multiplication-table', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 668)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '669', '修剪二叉搜索树', 'trim-a-binary-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 669)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '670', '最大交换', 'maximum-swap', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 670)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '671', '二叉树中第二小的节点', 'second-minimum-node-in-a-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 671)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '672', '灯泡开关 Ⅱ', 'bulb-switcher-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 672)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '673', '最长递增子序列的个数', 'number-of-longest-increasing-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 673)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '674', '最长连续递增序列', 'longest-continuous-increasing-subsequence', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 674)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '675', '为高尔夫比赛砍树', 'cut-off-trees-for-golf-event', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 675)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '676', '实现一个魔法字典', 'implement-magic-dictionary', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 676)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '677', '键值映射', 'map-sum-pairs', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 677)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '678', '有效的括号字符串', 'valid-parenthesis-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 678)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '679', '24 点游戏', '24-game', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 679)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '680', '验证回文字符串 Ⅱ', 'valid-palindrome-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 680)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '681', '最近时刻', 'next-closest-time', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 681)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '682', '棒球比赛', 'baseball-game', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 682)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '683', 'K 个空花盆', 'k-empty-slots', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 683)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '684', '冗余连接', 'redundant-connection', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 684)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '685', '冗余连接 II', 'redundant-connection-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 685)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '686', '重复叠加字符串匹配', 'repeated-string-match', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 686)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '687', '最长同值路径', 'longest-univalue-path', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 687)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '688', '“马”在棋盘上的概率', 'knight-probability-in-chessboard', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 688)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '689', '三个无重叠子数组的最大和', 'maximum-sum-of-3-non-overlapping-subarrays', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 689)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '690', '员工的重要性', 'employee-importance', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 690)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '691', '贴纸拼词', 'stickers-to-spell-word', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 691)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '692', '前K个高频单词', 'top-k-frequent-words', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 692)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '693', '交替位二进制数', 'binary-number-with-alternating-bits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 693)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '694', '不同岛屿的数量', 'number-of-distinct-islands', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 694)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '695', '岛屿的最大面积', 'max-area-of-island', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 695)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '696', '计数二进制子串', 'count-binary-substrings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 696)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '697', '数组的度', 'degree-of-an-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 697)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '698', '划分为k个相等的子集', 'partition-to-k-equal-sum-subsets', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 698)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '699', '掉落的方块', 'falling-squares', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 699)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '700', '二叉搜索树中的搜索', 'search-in-a-binary-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 700)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '701', '二叉搜索树中的插入操作', 'insert-into-a-binary-search-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 701)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '702', '搜索长度未知的有序数组', 'search-in-a-sorted-array-of-unknown-size', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 702)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '703', '数据流中的第K大元素', 'kth-largest-element-in-a-stream', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 703)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '704', '二分查找', 'binary-search', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 704)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '705', '设计哈希集合', 'design-hashset', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 705)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '706', '设计哈希映射', 'design-hashmap', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 706)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '707', '设计链表', 'design-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 707)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '708', '循环有序列表的插入', 'insert-into-a-sorted-circular-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 708)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '709', '转换成小写字母', 'to-lower-case', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 709)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '710', '黑名单中的随机数', 'random-pick-with-blacklist', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 710)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '711', '不同岛屿的数量 II', 'number-of-distinct-islands-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 711)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '712', '两个字符串的最小ASCII删除和', 'minimum-ascii-delete-sum-for-two-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 712)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '713', '乘积小于K的子数组', 'subarray-product-less-than-k', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 713)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '714', '买卖股票的最佳时机含手续费', 'best-time-to-buy-and-sell-stock-with-transaction-fee', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 714)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '715', 'Range 模块', 'range-module', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 715)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '716', '最大栈', 'max-stack', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 716)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '717', '1比特与2比特字符', '1-bit-and-2-bit-characters', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 717)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '718', '最长重复子数组', 'maximum-length-of-repeated-subarray', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 718)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '719', '找出第 k 小的距离对', 'find-k-th-smallest-pair-distance', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 719)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '720', '词典中最长的单词', 'longest-word-in-dictionary', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 720)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '721', '账户合并', 'accounts-merge', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 721)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '722', '删除注释', 'remove-comments', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 722)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '723', '粉碎糖果', 'candy-crush', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 723)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '724', '寻找数组的中心索引', 'find-pivot-index', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 724)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '725', '分隔链表', 'split-linked-list-in-parts', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 725)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '726', '原子的数量', 'number-of-atoms', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 726)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '727', '最小窗口子序列', 'minimum-window-subsequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 727)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '728', '自除数', 'self-dividing-numbers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 728)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '729', '我的日程安排表 I', 'my-calendar-i', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 729)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '730', '统计不同回文子字符串', 'count-different-palindromic-subsequences', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 730)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '731', '我的日程安排表 II', 'my-calendar-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 731)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '732', '我的日程安排表 III', 'my-calendar-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 732)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '733', '图像渲染', 'flood-fill', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 733)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '734', '句子相似性', 'sentence-similarity', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 734)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '735', '行星碰撞', 'asteroid-collision', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 735)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '736', 'Lisp 语法解析', 'parse-lisp-expression', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 736)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '737', '句子相似性 II', 'sentence-similarity-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 737)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '738', '单调递增的数字', 'monotone-increasing-digits', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 738)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '739', '每日温度', 'daily-temperatures', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 739)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '740', '删除与获得点数', 'delete-and-earn', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 740)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '741', '摘樱桃', 'cherry-pickup', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 741)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '742', '二叉树最近的叶节点', 'closest-leaf-in-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 742)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '743', '网络延迟时间', 'network-delay-time', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 743)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '744', '寻找比目标字母大的最小字母', 'find-smallest-letter-greater-than-target', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 744)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '745', '前缀和后缀搜索', 'prefix-and-suffix-search', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 745)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '746', '使用最小花费爬楼梯', 'min-cost-climbing-stairs', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 746)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '747', '至少是其他数字两倍的最大数', 'largest-number-at-least-twice-of-others', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 747)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '748', '最短完整词', 'shortest-completing-word', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 748)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '749', '隔离病毒', 'contain-virus', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 749)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '750', '角矩形的数量', 'number-of-corner-rectangles', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 750)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '751', 'IP 到 CIDR', 'ip-to-cidr', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 751)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '752', '打开转盘锁', 'open-the-lock', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 752)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '753', '破解保险箱', 'cracking-the-safe', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 753)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '754', '到达终点数字', 'reach-a-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 754)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '755', '倒水', 'pour-water', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 755)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '756', '金字塔转换矩阵', 'pyramid-transition-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 756)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '757', '设置交集大小至少为2', 'set-intersection-size-at-least-two', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 757)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '758', '字符串中的加粗单词', 'bold-words-in-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 758)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '759', '员工空闲时间', 'employee-free-time', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 759)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '760', '找出变位映射', 'find-anagram-mappings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 760)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '761', '特殊的二进制序列', 'special-binary-string', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 761)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '762', '二进制表示中质数个计算置位', 'prime-number-of-set-bits-in-binary-representation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 762)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '763', '划分字母区间', 'partition-labels', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 763)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '764', '最大加号标志', 'largest-plus-sign', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 764)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '765', '情侣牵手', 'couples-holding-hands', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 765)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '766', '托普利茨矩阵', 'toeplitz-matrix', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 766)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '767', '重构字符串', 'reorganize-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 767)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '768', '最多能完成排序的块 II', 'max-chunks-to-make-sorted-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 768)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '769', '最多能完成排序的块', 'max-chunks-to-make-sorted', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 769)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '770', '基本计算器 IV', 'basic-calculator-iv', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 770)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '771', '宝石与石头', 'jewels-and-stones', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 771)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '772', '基本计算器 III', 'basic-calculator-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 772)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '773', '滑动谜题', 'sliding-puzzle', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 773)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '774', '最小化去加油站的最大距离', 'minimize-max-distance-to-gas-station', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 774)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '775', '全局倒置与局部倒置', 'global-and-local-inversions', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 775)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '776', '拆分二叉搜索树', 'split-bst', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 776)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '777', '在LR字符串中交换相邻字符', 'swap-adjacent-in-lr-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 777)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '778', '水位上升的泳池中游泳', 'swim-in-rising-water', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 778)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '779', '第K个语法符号', 'k-th-symbol-in-grammar', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 779)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '780', '到达终点', 'reaching-points', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 780)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '781', '森林中的兔子', 'rabbits-in-forest', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 781)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '782', '变为棋盘', 'transform-to-chessboard', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 782)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '783', '二叉搜索树结点最小距离', 'minimum-distance-between-bst-nodes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 783)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '784', '字母大小写全排列', 'letter-case-permutation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 784)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '785', '判断二分图', 'is-graph-bipartite', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 785)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '786', '第 K 个最小的素数分数', 'k-th-smallest-prime-fraction', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 786)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '787', 'K 站中转内最便宜的航班', 'cheapest-flights-within-k-stops', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 787)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '788', '旋转数字', 'rotated-digits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 788)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '789', '逃脱阻碍者', 'escape-the-ghosts', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 789)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '790', '多米诺和托米诺平铺', 'domino-and-tromino-tiling', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 790)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '791', '自定义字符串排序', 'custom-sort-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 791)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '792', '匹配子序列的单词数', 'number-of-matching-subsequences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 792)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '793', '阶乘函数后K个零', 'preimage-size-of-factorial-zeroes-function', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 793)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '794', '有效的井字游戏', 'valid-tic-tac-toe-state', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 794)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '795', '区间子数组个数', 'number-of-subarrays-with-bounded-maximum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 795)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '796', '旋转字符串', 'rotate-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 796)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '797', '所有可能的路径', 'all-paths-from-source-to-target', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 797)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '798', '得分最高的最小轮调', 'smallest-rotation-with-highest-score', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 798)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '799', '香槟塔', 'champagne-tower', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 799)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '800', '相似 RGB 颜色', 'similar-rgb-color', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 800)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '801', '使序列递增的最小交换次数', 'minimum-swaps-to-make-sequences-increasing', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 801)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '802', '找到最终的安全状态', 'find-eventual-safe-states', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 802)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '803', '打砖块', 'bricks-falling-when-hit', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 803)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '804', '唯一摩尔斯密码词', 'unique-morse-code-words', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 804)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '805', '数组的均值分割', 'split-array-with-same-average', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 805)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '806', '写字符串需要的行数', 'number-of-lines-to-write-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 806)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '807', '保持城市天际线', 'max-increase-to-keep-city-skyline', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 807)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '808', '分汤', 'soup-servings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 808)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '809', '情感丰富的文字', 'expressive-words', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 809)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '810', '黑板异或游戏', 'chalkboard-xor-game', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 810)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '811', '子域名访问计数', 'subdomain-visit-count', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 811)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '812', '最大三角形面积', 'largest-triangle-area', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 812)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '813', '最大平均值和的分组', 'largest-sum-of-averages', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 813)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '814', '二叉树剪枝', 'binary-tree-pruning', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 814)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '815', '公交路线', 'bus-routes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 815)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '816', '模糊坐标', 'ambiguous-coordinates', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 816)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '817', '链表组件', 'linked-list-components', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 817)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '818', '赛车', 'race-car', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 818)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '819', '最常见的单词', 'most-common-word', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 819)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '820', '单词的压缩编码', 'short-encoding-of-words', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 820)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '821', '字符的最短距离', 'shortest-distance-to-a-character', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 821)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '822', '翻转卡片游戏', 'card-flipping-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 822)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '823', '带因子的二叉树', 'binary-trees-with-factors', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 823)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '824', '山羊拉丁文', 'goat-latin', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 824)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '825', '适龄的朋友', 'friends-of-appropriate-ages', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 825)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '826', '安排工作以达到最大收益', 'most-profit-assigning-work', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 826)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '827', '最大人工岛', 'making-a-large-island', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 827)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '828', '独特字符串', 'unique-letter-string', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 828)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '829', '连续整数求和', 'consecutive-numbers-sum', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 829)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '830', '较大分组的位置', 'positions-of-large-groups', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 830)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '831', '隐藏个人信息', 'masking-personal-information', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 831)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '832', '翻转图像', 'flipping-an-image', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 832)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '833', '字符串中的查找与替换', 'find-and-replace-in-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 833)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '834', '树中距离之和', 'sum-of-distances-in-tree', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 834)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '835', '图像重叠', 'image-overlap', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 835)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '836', '矩形重叠', 'rectangle-overlap', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 836)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '837', '新21点', 'new-21-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 837)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '838', '推多米诺', 'push-dominoes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 838)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '839', '相似字符串组', 'similar-string-groups', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 839)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '840', '矩阵中的幻方', 'magic-squares-in-grid', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 840)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '841', '钥匙和房间', 'keys-and-rooms', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 841)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '842', '将数组拆分成斐波那契序列', 'split-array-into-fibonacci-sequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 842)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '843', '猜猜这个单词', 'guess-the-word', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 843)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '844', '比较含退格的字符串', 'backspace-string-compare', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 844)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '845', '数组中的最长山脉', 'longest-mountain-in-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 845)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '846', '一手顺子', 'hand-of-straights', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 846)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '847', '访问所有节点的最短路径', 'shortest-path-visiting-all-nodes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 847)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '848', '字母移位', 'shifting-letters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 848)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '849', '到最近的人的最大距离', 'maximize-distance-to-closest-person', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 849)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '850', '矩形面积 II', 'rectangle-area-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 850)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '851', '喧闹和富有', 'loud-and-rich', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 851)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '852', '山脉数组的峰顶索引', 'peak-index-in-a-mountain-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 852)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '853', '车队', 'car-fleet', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 853)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '854', '相似度为 K 的字符串', 'k-similar-strings', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 854)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '855', '考场就座', 'exam-room', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 855)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '856', '括号的分数', 'score-of-parentheses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 856)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '857', '雇佣 K 名工人的最低成本', 'minimum-cost-to-hire-k-workers', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 857)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '858', '镜面反射', 'mirror-reflection', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 858)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '859', '亲密字符串', 'buddy-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 859)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '860', '柠檬水找零', 'lemonade-change', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 860)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '861', '翻转矩阵后的得分', 'score-after-flipping-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 861)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '862', '和至少为 K 的最短子数组', 'shortest-subarray-with-sum-at-least-k', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 862)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '863', '二叉树中所有距离为 K 的结点', 'all-nodes-distance-k-in-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 863)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '864', '获取所有钥匙的最短路径', 'shortest-path-to-get-all-keys', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 864)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '865', '具有所有最深结点的最小子树', 'smallest-subtree-with-all-the-deepest-nodes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 865)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '866', '回文素数', 'prime-palindrome', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 866)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '867', '转置矩阵', 'transpose-matrix', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 867)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '868', '二进制间距', 'binary-gap', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 868)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '869', '重新排序得到 2 的幂', 'reordered-power-of-2', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 869)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '870', '优势洗牌', 'advantage-shuffle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 870)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '871', '最低加油次数', 'minimum-number-of-refueling-stops', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 871)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '872', '叶子相似的树', 'leaf-similar-trees', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 872)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '873', '最长的斐波那契子序列的长度', 'length-of-longest-fibonacci-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 873)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '874', '模拟行走机器人', 'walking-robot-simulation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 874)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '875', '爱吃香蕉的珂珂', 'koko-eating-bananas', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 875)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '876', '链表的中间结点', 'middle-of-the-linked-list', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 876)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '877', '石子游戏', 'stone-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 877)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '878', '第 N 个神奇数字', 'nth-magical-number', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 878)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '879', '盈利计划', 'profitable-schemes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 879)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '880', '索引处的解码字符串', 'decoded-string-at-index', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 880)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '881', '救生艇', 'boats-to-save-people', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 881)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '882', '细分图中的可到达结点', 'reachable-nodes-in-subdivided-graph', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 882)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '883', '三维形体投影面积', 'projection-area-of-3d-shapes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 883)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '884', '两句话中的不常见单词', 'uncommon-words-from-two-sentences', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 884)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '885', '螺旋矩阵 III', 'spiral-matrix-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 885)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '886', '可能的二分法', 'possible-bipartition', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 886)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '887', '鸡蛋掉落', 'super-egg-drop', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 887)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '888', '公平的糖果交换', 'fair-candy-swap', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 888)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '889', '根据前序和后序遍历构造二叉树', 'construct-binary-tree-from-preorder-and-postorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 889)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '890', '查找和替换模式', 'find-and-replace-pattern', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 890)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '891', '子序列宽度之和', 'sum-of-subsequence-widths', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 891)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '892', '三维形体的表面积', 'surface-area-of-3d-shapes', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 892)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '893', '特殊等价字符串组', 'groups-of-special-equivalent-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 893)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '894', '所有可能的满二叉树', 'all-possible-full-binary-trees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 894)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '895', '最大频率栈', 'maximum-frequency-stack', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 895)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '896', '单调数列', 'monotonic-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 896)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '897', '递增顺序查找树', 'increasing-order-search-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 897)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '898', '子数组按位或操作', 'bitwise-ors-of-subarrays', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 898)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '899', '有序队列', 'orderly-queue', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 899)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '900', 'RLE 迭代器', 'rle-iterator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 900)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '901', '股票价格跨度', 'online-stock-span', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 901)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '902', '最大为 N 的数字组合', 'numbers-at-most-n-given-digit-set', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 902)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '903', 'DI 序列的有效排列', 'valid-permutations-for-di-sequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 903)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '904', '水果成篮', 'fruit-into-baskets', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 904)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '905', '按奇偶排序数组', 'sort-array-by-parity', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 905)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '906', '超级回文数', 'super-palindromes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 906)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '907', '子数组的最小值之和', 'sum-of-subarray-minimums', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 907)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '908', '最小差值 I', 'smallest-range-i', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 908)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '909', '蛇梯棋', 'snakes-and-ladders', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 909)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '910', '最小差值 II', 'smallest-range-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 910)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '911', '在线选举', 'online-election', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 911)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '912', '排序数组', 'sort-an-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 912)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '913', '猫和老鼠', 'cat-and-mouse', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 913)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '914', '卡牌分组', 'x-of-a-kind-in-a-deck-of-cards', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 914)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '915', '分割数组', 'partition-array-into-disjoint-intervals', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 915)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '916', '单词子集', 'word-subsets', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 916)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '917', '仅仅反转字母', 'reverse-only-letters', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 917)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '918', '环形子数组的最大和', 'maximum-sum-circular-subarray', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 918)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '919', '完全二叉树插入器', 'complete-binary-tree-inserter', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 919)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '920', '播放列表的数量', 'number-of-music-playlists', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 920)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '921', '使括号有效的最少添加', 'minimum-add-to-make-parentheses-valid', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 921)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '922', '按奇偶排序数组 II', 'sort-array-by-parity-ii', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 922)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '923', '三数之和的多种可能', '3sum-with-multiplicity', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 923)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '924', '尽量减少恶意软件的传播', 'minimize-malware-spread', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 924)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '925', '长按键入', 'long-pressed-name', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 925)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '926', '将字符串翻转到单调递增', 'flip-string-to-monotone-increasing', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 926)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '927', '三等分', 'three-equal-parts', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 927)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '928', '尽量减少恶意软件的传播 II', 'minimize-malware-spread-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 928)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '929', '独特的电子邮件地址', 'unique-email-addresses', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 929)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '930', '和相同的二元子数组', 'binary-subarrays-with-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 930)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '931', '下降路径最小和', 'minimum-falling-path-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 931)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '932', '漂亮数组', 'beautiful-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 932)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '933', '最近的请求次数', 'number-of-recent-calls', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 933)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '934', '最短的桥', 'shortest-bridge', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 934)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '935', '骑士拨号器', 'knight-dialer', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 935)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '936', '戳印序列', 'stamping-the-sequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 936)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '937', '重新排列日志文件', 'reorder-data-in-log-files', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 937)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '938', '二叉搜索树的范围和', 'range-sum-of-bst', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 938)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '939', '最小面积矩形', 'minimum-area-rectangle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 939)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '940', '不同的子序列 II', 'distinct-subsequences-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 940)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '941', '有效的山脉数组', 'valid-mountain-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 941)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '942', '增减字符串匹配', 'di-string-match', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 942)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '943', '最短超级串', 'find-the-shortest-superstring', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 943)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '944', '删列造序', 'delete-columns-to-make-sorted', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 944)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '945', '使数组唯一的最小增量', 'minimum-increment-to-make-array-unique', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 945)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '946', '验证栈序列', 'validate-stack-sequences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 946)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '947', '移除最多的同行或同列石头', 'most-stones-removed-with-same-row-or-column', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 947)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '948', '令牌放置', 'bag-of-tokens', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 948)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '949', '给定数字能组成的最大时间', 'largest-time-for-given-digits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 949)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '950', '按递增顺序显示卡牌', 'reveal-cards-in-increasing-order', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 950)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '951', '翻转等价二叉树', 'flip-equivalent-binary-trees', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 951)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '952', '按公因数计算最大组件大小', 'largest-component-size-by-common-factor', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 952)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '953', '验证外星语词典', 'verifying-an-alien-dictionary', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 953)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '954', '二倍数对数组', 'array-of-doubled-pairs', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 954)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '955', '删列造序 II', 'delete-columns-to-make-sorted-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 955)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '956', '最高的广告牌', 'tallest-billboard', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 956)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '957', 'N 天后的牢房', 'prison-cells-after-n-days', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 957)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '958', '二叉树的完全性检验', 'check-completeness-of-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 958)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '959', '由斜杠划分区域', 'regions-cut-by-slashes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 959)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '960', '删列造序 III', 'delete-columns-to-make-sorted-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 960)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '961', '重复 N 次的元素', 'n-repeated-element-in-size-2n-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 961)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '962', '最大宽度坡', 'maximum-width-ramp', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 962)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '963', '最小面积矩形 II', 'minimum-area-rectangle-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 963)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '964', '表示数字的最少运算符', 'least-operators-to-express-number', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 964)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '965', '单值二叉树', 'univalued-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 965)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '966', '元音拼写检查器', 'vowel-spellchecker', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 966)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '967', '连续差相同的数字', 'numbers-with-same-consecutive-differences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 967)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '968', '监控二叉树', 'binary-tree-cameras', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 968)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '969', '煎饼排序', 'pancake-sorting', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 969)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '970', '强整数', 'powerful-integers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 970)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '971', '翻转二叉树以匹配先序遍历', 'flip-binary-tree-to-match-preorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 971)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '972', '相等的有理数', 'equal-rational-numbers', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 972)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '973', '最接近原点的 K 个点', 'k-closest-points-to-origin', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 973)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '974', '和可被 K 整除的子数组', 'subarray-sums-divisible-by-k', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 974)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '975', '奇偶跳', 'odd-even-jump', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 975)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '976', '三角形的最大周长', 'largest-perimeter-triangle', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 976)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '977', '有序数组的平方', 'squares-of-a-sorted-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 977)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '978', '最长湍流子数组', 'longest-turbulent-subarray', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 978)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '979', '在二叉树中分配硬币', 'distribute-coins-in-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 979)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '980', '不同路径 III', 'unique-paths-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 980)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '981', '基于时间的键值存储', 'time-based-key-value-store', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 981)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '982', '按位与为零的三元组', 'triples-with-bitwise-and-equal-to-zero', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 982)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '983', '最低票价', 'minimum-cost-for-tickets', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 983)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '984', '不含 AAA 或 BBB 的字符串', 'string-without-aaa-or-bbb', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 984)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '985', '查询后的偶数和', 'sum-of-even-numbers-after-queries', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 985)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '986', '区间列表的交集', 'interval-list-intersections', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 986)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '987', '二叉树的垂序遍历', 'vertical-order-traversal-of-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 987)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '988', '从叶结点开始的最小字符串', 'smallest-string-starting-from-leaf', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 988)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '989', '数组形式的整数加法', 'add-to-array-form-of-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 989)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '990', '等式方程的可满足性', 'satisfiability-of-equality-equations', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 990)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '991', '坏了的计算器', 'broken-calculator', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 991)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '992', 'K 个不同整数的子数组', 'subarrays-with-k-different-integers', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 992)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '993', '二叉树的堂兄弟节点', 'cousins-in-binary-tree', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 993)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '994', '腐烂的橘子', 'rotting-oranges', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 994)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '995', 'K 连续位的最小翻转次数', 'minimum-number-of-k-consecutive-bit-flips', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 995)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '996', '正方形数组的数目', 'number-of-squareful-arrays', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 996)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '997', '找到小镇的法官', 'find-the-town-judge', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 997)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '998', '最大二叉树 II', 'maximum-binary-tree-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 998)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '999', '车的可用捕获量', 'available-captures-for-rook', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 999)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1000', '合并石头的最低成本', 'minimum-cost-to-merge-stones', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1000)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1001', '网格照明', 'grid-illumination', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1001)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1002', '查找常用字符', 'find-common-characters', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1002)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1003', '检查替换后的词是否有效', 'check-if-word-is-valid-after-substitutions', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1003)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1004', '最大连续1的个数 III', 'max-consecutive-ones-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1004)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1005', 'K 次取反后最大化的数组和', 'maximize-sum-of-array-after-k-negations', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1005)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1006', '笨阶乘', 'clumsy-factorial', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1006)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1007', '行相等的最少多米诺旋转', 'minimum-domino-rotations-for-equal-row', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1007)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1008', '先序遍历构造二叉树', 'construct-binary-search-tree-from-preorder-traversal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1008)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1009', '十进制整数的反码', 'complement-of-base-10-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1009)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1010', '总持续时间可被 60 整除的歌曲', 'pairs-of-songs-with-total-durations-divisible-by-60', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1010)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1011', '在 D 天内送达包裹的能力', 'capacity-to-ship-packages-within-d-days', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1011)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1012', '至少有 1 位重复的数字', 'numbers-with-repeated-digits', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1012)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1013', '将数组分成和相等的三个部分', 'partition-array-into-three-parts-with-equal-sum', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1013)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1014', '最佳观光组合', 'best-sightseeing-pair', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1014)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1015', '可被 K 整除的最小整数', 'smallest-integer-divisible-by-k', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1015)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1016', '子串能表示从 1 到 N 数字的二进制串', 'binary-string-with-substrings-representing-1-to-n', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1016)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1017', '负二进制转换', 'convert-to-base-2', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1017)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1018', '可被 5 整除的二进制前缀', 'binary-prefix-divisible-by-5', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1018)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1019', '链表中的下一个更大节点', 'next-greater-node-in-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1019)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1020', '飞地的数量', 'number-of-enclaves', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1020)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1021', '删除最外层的括号', 'remove-outermost-parentheses', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1021)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1022', '从根到叶的二进制数之和', 'sum-of-root-to-leaf-binary-numbers', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1022)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1023', '驼峰式匹配', 'camelcase-matching', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1023)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1024', '视频拼接', 'video-stitching', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1024)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1025', '除数博弈', 'divisor-game', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1025)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1026', '节点与其祖先之间的最大差值', 'maximum-difference-between-node-and-ancestor', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1026)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1027', '最长等差数列', 'longest-arithmetic-sequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1027)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1028', '从先序遍历还原二叉树', 'recover-a-tree-from-preorder-traversal', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1028)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1029', '两地调度', 'two-city-scheduling', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1029)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1030', '距离顺序排列矩阵单元格', 'matrix-cells-in-distance-order', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1030)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1031', '两个非重叠子数组的最大和', 'maximum-sum-of-two-non-overlapping-subarrays', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1031)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1032', '字符流', 'stream-of-characters', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1032)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1033', '移动石子直到连续', 'moving-stones-until-consecutive', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1033)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1034', '边框着色', 'coloring-a-border', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1034)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1035', '不相交的线', 'uncrossed-lines', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1035)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1036', '逃离大迷宫', 'escape-a-large-maze', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1036)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1037', '有效的回旋镖', 'valid-boomerang', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1037)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1038', '从二叉搜索树到更大和树', 'binary-search-tree-to-greater-sum-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1038)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1039', '多边形三角剖分的最低得分', 'minimum-score-triangulation-of-polygon', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1039)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1040', '移动石子直到连续 II', 'moving-stones-until-consecutive-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1040)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1041', '困于环中的机器人', 'robot-bounded-in-circle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1041)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1042', '不邻接植花', 'flower-planting-with-no-adjacent', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1042)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1043', '分隔数组以得到最大和', 'partition-array-for-maximum-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1043)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1044', '最长重复子串', 'longest-duplicate-substring', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1044)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1046', '最后一块石头的重量', 'last-stone-weight', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1046)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1047', '删除字符串中的所有相邻重复项', 'remove-all-adjacent-duplicates-in-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1047)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1048', '最长字符串链', 'longest-string-chain', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1048)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1049', '最后一块石头的重量 II', 'last-stone-weight-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1049)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1051', '高度检查器', 'height-checker', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1051)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1052', '爱生气的书店老板', 'grumpy-bookstore-owner', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1052)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1053', '交换一次的先前排列', 'previous-permutation-with-one-swap', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1053)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1054', '距离相等的条形码', 'distant-barcodes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1054)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1055', '形成字符串的最短路径', 'shortest-way-to-form-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1055)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1056', '易混淆数', 'confusing-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1056)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1057', '校园自行车分配', 'campus-bikes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1057)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1058', '最小化舍入误差以满足目标', 'minimize-rounding-error-to-meet-target', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1058)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1059', '从始点到终点的所有路径', 'all-paths-from-source-lead-to-destination', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1059)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1060', '有序数组中的缺失元素', 'missing-element-in-sorted-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1060)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1061', '按字典序排列最小的等效字符串', 'lexicographically-smallest-equivalent-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1061)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1062', '最长重复子串', 'longest-repeating-substring', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1062)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1063', '有效子数组的数目', 'number-of-valid-subarrays', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1063)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1064', '不动点', 'fixed-point', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1064)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1065', '字符串的索引对', 'index-pairs-of-a-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1065)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1066', '校园自行车分配 II', 'campus-bikes-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1066)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1067', '范围内的数字计数', 'digit-count-in-range', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1067)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1071', '字符串的最大公因子', 'greatest-common-divisor-of-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1071)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1072', '按列翻转得到最大值等行数', 'flip-columns-for-maximum-number-of-equal-rows', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1072)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1073', '负二进制数相加', 'adding-two-negabinary-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1073)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1074', '元素和为目标值的子矩阵数量', 'number-of-submatrices-that-sum-to-target', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1074)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1078', 'Bigram 分词', 'occurrences-after-bigram', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1078)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1079', '活字印刷', 'letter-tile-possibilities', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1079)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1080', '根到叶路径上的不足节点', 'insufficient-nodes-in-root-to-leaf-paths', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1080)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1081', '不同字符的最小子序列', 'smallest-subsequence-of-distinct-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1081)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1085', '最小元素各数位之和', 'sum-of-digits-in-the-minimum-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1085)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1086', '前五科的均分', 'high-five', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1086)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1087', '字母切换', 'brace-expansion', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1087)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1088', '易混淆数 II', 'confusing-number-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1088)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1089', '复写零', 'duplicate-zeros', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1089)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1090', '受标签影响的最大值', 'largest-values-from-labels', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1090)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1091', '二进制矩阵中的最短路径', 'shortest-path-in-binary-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1091)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1092', '最短公共超序列', 'shortest-common-supersequence', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1092)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1093', '大样本统计', 'statistics-from-a-large-sample', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1093)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1094', '拼车', 'car-pooling', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1094)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1095', '山脉数组中查找目标值', 'find-in-mountain-array', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1095)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1096', '花括号展开 II', 'brace-expansion-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1096)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1099', '小于 K 的两数之和', 'two-sum-less-than-k', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1099)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1100', '长度为 K 的无重复字符子串', 'find-k-length-substrings-with-no-repeated-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1100)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1101', '彼此熟识的最早时间', 'the-earliest-moment-when-everyone-become-friends', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1101)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1102', '得分最高的路径', 'path-with-maximum-minimum-value', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1102)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1103', '分糖果 II', 'distribute-candies-to-people', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1103)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1104', '二叉树寻路', 'path-in-zigzag-labelled-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1104)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1105', '填充书架', 'filling-bookcase-shelves', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1105)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1106', '解析布尔表达式', 'parsing-a-boolean-expression', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1106)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1108', 'IP 地址无效化', 'defanging-an-ip-address', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1108)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1109', '航班预订统计', 'corporate-flight-bookings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1109)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1110', '删点成林', 'delete-nodes-and-return-forest', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1110)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1111', '有效括号的嵌套深度', 'maximum-nesting-depth-of-two-valid-parentheses-strings', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1111)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1118', '一月有多少天', 'number-of-days-in-a-month', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1118)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1119', '删去字符串中的元音', 'remove-vowels-from-a-string', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1119)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1120', '子树的最大平均值', 'maximum-average-subtree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1120)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1121', '将数组分成几个递增序列', 'divide-array-into-increasing-sequences', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1121)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1122', '数组的相对排序', 'relative-sort-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1122)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1123', '最深叶节点的最近公共祖先', 'lowest-common-ancestor-of-deepest-leaves', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1123)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1124', '表现良好的最长时间段', 'longest-well-performing-interval', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1124)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1125', '最小的必要团队', 'smallest-sufficient-team', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1125)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1128', '等价多米诺骨牌对的数量', 'number-of-equivalent-domino-pairs', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1128)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1129', '颜色交替的最短路径', 'shortest-path-with-alternating-colors', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1129)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1130', '叶值的最小代价生成树', 'minimum-cost-tree-from-leaf-values', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1130)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1131', '绝对值表达式的最大值', 'maximum-of-absolute-value-expression', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1131)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1133', '最大唯一数', 'largest-unique-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1133)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1134', '阿姆斯特朗数', 'armstrong-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1134)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1135', '最低成本联通所有城市', 'connecting-cities-with-minimum-cost', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1135)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1136', '平行课程', 'parallel-courses', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1136)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1137', '第 N 个泰波那契数', 'n-th-tribonacci-number', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1137)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1138', '字母板上的路径', 'alphabet-board-path', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1138)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1139', '最大的以 1 为边界的正方形', 'largest-1-bordered-square', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1139)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1140', '石子游戏 II', 'stone-game-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1140)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1143', '最长公共子序列', 'longest-common-subsequence', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1143)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1144', '递减元素使数组呈锯齿状', 'decrease-elements-to-make-array-zigzag', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1144)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1145', '二叉树着色游戏', 'binary-tree-coloring-game', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1145)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1146', '快照数组', 'snapshot-array', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1146)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1147', '段式回文', 'longest-chunked-palindrome-decomposition', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1147)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1150', '检查一个数是否在数组中占绝大多数', 'check-if-a-number-is-majority-element-in-a-sorted-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1150)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1151', '最少交换次数来组合所有的 1', 'minimum-swaps-to-group-all-1s-together', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1151)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1152', '用户网站访问行为分析', 'analyze-user-website-visit-pattern', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1152)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1153', '字符串转化', 'string-transforms-into-another-string', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1153)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1154', '一年中的第几天', 'day-of-the-year', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1154)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1155', '掷骰子的N种方法', 'number-of-dice-rolls-with-target-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1155)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1156', '单字符重复子串的最大长度', 'swap-for-longest-repeated-character-substring', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1156)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1157', '子数组中占绝大多数的元素', 'online-majority-element-in-subarray', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1157)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1160', '拼写单词', 'find-words-that-can-be-formed-by-characters', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1160)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1161', '最大层内元素和', 'maximum-level-sum-of-a-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1161)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1162', '地图分析', 'as-far-from-land-as-possible', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1162)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1163', '按字典序排在最后的子串', 'last-substring-in-lexicographical-order', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1163)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1165', '单行键盘', 'single-row-keyboard', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1165)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1166', '设计文件系统', 'design-file-system', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1166)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1167', '连接棒材的最低费用', 'minimum-cost-to-connect-sticks', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1167)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1168', '水资源分配优化', 'optimize-water-distribution-in-a-village', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1168)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1169', '查询无效交易', 'invalid-transactions', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1169)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1170', '比较字符串最小字母出现频次', 'compare-strings-by-frequency-of-the-smallest-character', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1170)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1171', '从链表中删去总和值为零的连续节点', 'remove-zero-sum-consecutive-nodes-from-linked-list', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1171)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1172', '餐盘栈', 'dinner-plate-stacks', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1172)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1175', '质数排列', 'prime-arrangements', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1175)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1176', '健身计划评估', 'diet-plan-performance', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1176)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1177', '构建回文串检测', 'can-make-palindrome-from-substring', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1177)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1178', '猜字谜', 'number-of-valid-words-for-each-puzzle', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1178)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1180', '统计只含单一字母的子串', 'count-substrings-with-only-one-distinct-letter', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1180)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1181', '前后拼接', 'before-and-after-puzzle', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1181)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1182', '与目标颜色间的最短距离', 'shortest-distance-to-target-color', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1182)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1183', '矩阵中 1 的最大数量', 'maximum-number-of-ones', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1183)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1184', '公交站间的距离', 'distance-between-bus-stops', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1184)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1185', '一周中的第几天', 'day-of-the-week', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1185)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1186', '删除一次得到子数组最大和', 'maximum-subarray-sum-with-one-deletion', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1186)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1187', '使数组严格递增', 'make-array-strictly-increasing', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1187)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1189', '“气球” 的最大数量', 'maximum-number-of-balloons', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1189)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1190', '反转每对括号间的子串', 'reverse-substrings-between-each-pair-of-parentheses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1190)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1191', 'K 次串联后最大子数组之和', 'k-concatenation-maximum-sum', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1191)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1192', '查找集群内的「关键连接」', 'critical-connections-in-a-network', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1192)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1196', '最多可以买到的苹果数量', 'how-many-apples-can-you-put-into-the-basket', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1196)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1197', '进击的骑士', 'minimum-knight-moves', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1197)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1198', '找出所有行中最小公共元素', 'find-smallest-common-element-in-all-rows', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1198)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1199', '建造街区的最短时间', 'minimum-time-to-build-blocks', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1199)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1200', '最小绝对差', 'minimum-absolute-difference', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1200)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1201', '丑数 III', 'ugly-number-iii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1201)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1202', '交换字符串中的元素', 'smallest-string-with-swaps', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1202)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1203', '项目管理', 'sort-items-by-groups-respecting-dependencies', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1203)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1206', '设计跳表', 'design-skiplist', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1206)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1207', '独一无二的出现次数', 'unique-number-of-occurrences', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1207)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1208', '尽可能使字符串相等', 'get-equal-substrings-within-budget', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1208)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1209', '删除字符串中的所有相邻重复项 II', 'remove-all-adjacent-duplicates-in-string-ii', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1209)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1210', '穿过迷宫的最少移动次数', 'minimum-moves-to-reach-target-with-rotations', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1210)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1213', '三个有序数组的交集', 'intersection-of-three-sorted-arrays', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1213)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1214', '查找两棵二叉搜索树之和', 'two-sum-bsts', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1214)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1215', '步进数', 'stepping-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1215)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1216', '验证回文字符串 III', 'valid-palindrome-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1216)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1217', '玩筹码', 'play-with-chips', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1217)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1218', '最长定差子序列', 'longest-arithmetic-subsequence-of-given-difference', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1218)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1219', '黄金矿工', 'path-with-maximum-gold', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1219)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1220', '统计元音字母序列的数目', 'count-vowels-permutation', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1220)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1221', '分割平衡字符串', 'split-a-string-in-balanced-strings', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1221)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1222', '可以攻击国王的皇后', 'queens-that-can-attack-the-king', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1222)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1223', '掷骰子模拟', 'dice-roll-simulation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1223)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1224', '最大相等频率', 'maximum-equal-frequency', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1224)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1227', '飞机座位分配概率', 'airplane-seat-assignment-probability', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1227)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1228', '等差数列中缺失的数字', 'missing-number-in-arithmetic-progression', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1228)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1229', '安排会议日程', 'meeting-scheduler', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1229)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1230', '抛掷硬币', 'toss-strange-coins', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1230)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1231', '分享巧克力', 'divide-chocolate', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1231)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1232', '缀点成线', 'check-if-it-is-a-straight-line', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1232)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1233', '删除子文件夹', 'remove-sub-folders-from-the-filesystem', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1233)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1234', '替换子串得到平衡字符串', 'replace-the-substring-for-balanced-string', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1234)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1235', '规划兼职工作', 'maximum-profit-in-job-scheduling', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1235)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1236', 'Web Crawler', 'web-crawler', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1236)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1237', '找出给定方程的正整数解', 'find-positive-integer-solution-for-a-given-equation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1237)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1238', '循环码排列', 'circular-permutation-in-binary-representation', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1238)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1239', '串联字符串的最大长度', 'maximum-length-of-a-concatenated-string-with-unique-characters', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1239)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1240', '铺瓷砖', 'tiling-a-rectangle-with-the-fewest-squares', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1240)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1243', '数组变换', 'array-transformation', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1243)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1244', '力扣排行榜', 'design-a-leaderboard', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1244)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1245', '树的直径', 'tree-diameter', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1245)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1246', '删除回文子数组', 'palindrome-removal', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1246)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1247', '交换字符使得字符串相同', 'minimum-swaps-to-make-strings-equal', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1247)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1248', '统计「优美子数组」', 'count-number-of-nice-subarrays', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1248)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1249', '移除无效的括号', 'minimum-remove-to-make-valid-parentheses', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1249)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1250', '检查「好数组」', 'check-if-it-is-a-good-array', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1250)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1252', '奇数值单元格的数目', 'cells-with-odd-values-in-a-matrix', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1252)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1253', '重构 2 行二进制矩阵', 'reconstruct-a-2-row-binary-matrix', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1253)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1254', '统计封闭岛屿的数目', 'number-of-closed-islands', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1254)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1255', '得分最高的单词集合', 'maximum-score-words-formed-by-letters', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1255)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1256', '加密数字', 'encode-number', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1256)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1257', '最小公共区域', 'smallest-common-region', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1257)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1258', '近义词句子', 'synonymous-sentences', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1258)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1259', '不相交的握手', 'handshakes-that-dont-cross', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1259)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1260', '二维网格迁移', 'shift-2d-grid', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1260)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1261', '在受污染的二叉树中查找元素', 'find-elements-in-a-contaminated-binary-tree', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1261)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1262', '可被三整除的最大和', 'greatest-sum-divisible-by-three', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1262)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1263', '推箱子', 'minimum-moves-to-move-a-box-to-their-target-location', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1263)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1265', 'Print Immutable Linked List in Reverse', 'print-immutable-linked-list-in-reverse', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1265)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1266', '访问所有点的最小时间', 'minimum-time-visiting-all-points', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1266)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1267', '统计参与通信的服务器', 'count-servers-that-communicate', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1267)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1268', '搜索推荐系统', 'search-suggestions-system', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1268)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1269', '停在原地的方案数', 'number-of-ways-to-stay-in-the-same-place-after-some-steps', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1269)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1271', '十六进制魔术数字', 'hexspeak', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1271)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1272', '删除区间', 'remove-interval', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1272)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1273', '删除树节点', 'delete-tree-nodes', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1273)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1274', '矩形内船只的数目', 'number-of-ships-in-a-rectangle', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1274)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1275', '找出井字棋的获胜者', 'find-winner-on-a-tic-tac-toe-game', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1275)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1276', '不浪费原料的汉堡制作方案', 'number-of-burgers-with-no-waste-of-ingredients', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1276)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1277', '统计全为 1 的正方形子矩阵', 'count-square-submatrices-with-all-ones', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1277)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1278', '分割回文串 III', 'palindrome-partitioning-iii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1278)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1281', '整数的各位积和之差', 'subtract-the-product-and-sum-of-digits-of-an-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1281)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1282', '用户分组', 'group-the-people-given-the-group-size-they-belong-to', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1282)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1283', '使结果不超过阈值的最小除数', 'find-the-smallest-divisor-given-a-threshold', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1283)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1284', '转化为全零矩阵的最少反转次数', 'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1284)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1286', '字母组合迭代器', 'iterator-for-combination', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1286)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1287', '有序数组中出现次数超过25%的元素', 'element-appearing-more-than-25-in-sorted-array', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1287)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1288', '删除被覆盖区间', 'remove-covered-intervals', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1288)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1289', '下降路径最小和 II', 'minimum-falling-path-sum-ii', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1289)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1290', '二进制链表转整数', 'convert-binary-number-in-a-linked-list-to-integer', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1290)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1291', '顺次数', 'sequential-digits', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1291)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1292', '元素和小于等于阈值的正方形的最大边长', 'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1292)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1293', '网格中的最短路径', 'shortest-path-in-a-grid-with-obstacles-elimination', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1293)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1295', '统计位数为偶数的数字', 'find-numbers-with-even-number-of-digits', '1', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1295)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1296', '划分数组为连续数字的集合', 'divide-array-in-sets-of-k-consecutive-numbers', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1296)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1297', '子串的最大出现次数', 'maximum-number-of-occurrences-of-a-substring', '2', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1297)  < 1;
INSERT INTO `lcsr_problem` (`id`, `problem`, `problem_en`, `difficulty`, `tag`) SELECT '1298', '你能从盒子里获得的最大糖果数', 'maximum-candies-you-can-get-from-boxes', '3', '0' WHERE (SELECT COUNT(*) FROM `lcsr_problem` WHERE id = 1298)  < 1;
